"""empty message

Revision ID: 267e9cc49b29
Revises: 48f8b6cf0dee
Create Date: 2020-04-14 18:29:23.705146

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '267e9cc49b29'
down_revision = '48f8b6cf0dee'
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Triggers for count, basis of delete and insert of exchangeconnect notification 
    op.execute('''CREATE or replace FUNCTION adjust_notification_count()
               RETURNS trigger AS $BODY$ BEGIN update "user" set 
               current_notification_count = (select count(*) from 
               notification where user_id = NEW.user_id and
               read_time is null and notification_group not in ('{}','{}')) where id = NEW.user_id; RETURN NEW; END; 
               $BODY$ LANGUAGE plpgsql;'''.format('emeeting','design_lab_project'))
    op.execute('''CREATE TRIGGER notification_delete AFTER DELETE ON 
               notification FOR EACH ROW EXECUTE PROCEDURE 
               adjust_notification_count();''')
    op.execute('''CREATE or replace FUNCTION g_notification_count() RETURNS 
               trigger AS $BODY$ BEGIN update "user" set 
               current_notification_count = (select count(*) from 
               notification where user_id = NEW.user_id and
               read_time is null and notification_group not in ('{}','{}')) where id = NEW.user_id; RETURN NEW; END; 
               $BODY$ LANGUAGE plpgsql;'''.format('emeeting','design_lab_project'))
    op.execute('''CREATE TRIGGER notification_create AFTER INSERT ON
               notification FOR EACH ROW EXECUTE PROCEDURE 
               g_notification_count();''')

    # Triggers for count, basis of delete and insert of designlab notifications
    op.execute('''CREATE or replace FUNCTION project_adjust_notification_count(
               )  RETURNS trigger AS $BODY$ BEGIN update "user" set 
               current_notification_designlab_count = (select count(*) from
               notification where user_id = NEW.user_id and
               read_time is null and notification_group in ('{}','{}')) where id = NEW.user_id; RETURN NEW; END; 
               $BODY$ LANGUAGE plpgsql;'''.format('emeeting','design_lab_project'))
    op.execute('''CREATE TRIGGER project_notification_delete AFTER DELETE ON 
               notification FOR EACH ROW EXECUTE PROCEDURE
               project_adjust_notification_count();''')

    op.execute('''CREATE or replace FUNCTION project_create_notification_count() RETURNS 
               trigger AS $BODY$ BEGIN update "user" set 
               current_notification_designlab_count = (select count(*) from
               notification where user_id = NEW.user_id and
               read_time is null and notification_group in ('{}','{}')) where id = NEW.user_id; RETURN NEW; END; 
               $BODY$ LANGUAGE plpgsql;'''.format('emeeting','design_lab_project'))
    op.execute('''CREATE TRIGGER project_notification_create AFTER INSERT ON
               notification FOR EACH ROW EXECUTE PROCEDURE
               project_create_notification_count();''')
    
    #op.add_column('notification', sa.Column('e_meeting_id', sa.BigInteger(), nullable=True))
    op.add_column('user', sa.Column('current_notification_designlab_count', sa.BigInteger(), nullable=True))
    #op.create_foreign_key('notification_e_meeting_id_fkey', 'notification', 'e_meeting', ['e_meeting_id'], ['id'], ondelete='CASCADE')
    

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    #op.drop_constraint('notification_e_meeting_id_fkey', 'notification', type_='foreignkey')
    #op.drop_column('notification', 'e_meeting_id')
    op.drop_column('user', 'current_notification_project_count')
    op.execute('drop trigger notification_delete on notification')
    op.execute('drop trigger notification_create on notification')
    op.execute('drop trigger project_notification_delete on notification')
    op.execute('drop trigger project_notification_create on notification')
   
    # ### end Alembic commands ###
