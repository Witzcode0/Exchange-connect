"""empty message

Revision ID: c30ac9fc6dff
Revises: decfa5e5fbb0
Create Date: 2021-12-06 18:08:49.773175

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c30ac9fc6dff'
down_revision = 'decfa5e5fbb0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    #CREATE UNIQUE INDEX account_is_not_deleted_unique on account (LOWER(account_name),deleted);
    #staging where condition
    #CREATE UNIQUE INDEX identifier_not_deleted_unique on account (identifier,deleted) where id > 17509 ;
    #op.create_index('account_is_not_deleted_unique', 'account', [sa.text('lower(account_name)'), 'deleted'], unique=True)
    #op.create_index('identifier_not_deleted_unique', 'account', ['identifier', 'deleted'], unique=True)
    #op.drop_index('ci_account_unique_account_name', 'account')
    op.execute('''CREATE or replace FUNCTION adjust_notification_count()
                   RETURNS trigger AS $BODY$ BEGIN update "user" set 
                   current_notification_count = (select count(*) from 
                   notification where user_id = OLD.user_id and
                   read_time is null and notification_group not in ('{}','{}')) where id = OLD.user_id; RETURN NULL; END; 
                   $BODY$ LANGUAGE plpgsql;'''.format('emeeting', 'design_lab_project'))
    op.execute('''CREATE TRIGGER notification_delete AFTER DELETE ON 
                   notification FOR EACH ROW EXECUTE PROCEDURE 
                   adjust_notification_count();''')
    op.execute('''CREATE or replace FUNCTION project_adjust_notification_count(
                   )  RETURNS trigger AS $BODY$ BEGIN update "user" set 
                   current_notification_designlab_count = (select count(*) from
                   notification where user_id = OLD.user_id and
                   read_time is null and notification_group in ('{}','{}')) where id = OLD.user_id; RETURN NULL; END; 
                   $BODY$ LANGUAGE plpgsql;'''.format('emeeting', 'design_lab_project'))
    op.execute('''CREATE TRIGGER project_notification_delete AFTER DELETE ON 
                   notification FOR EACH ROW EXECUTE PROCEDURE
                   project_adjust_notification_count();''')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    #op.drop_index('account_is_not_deleted_unique', 'account')
    #op.drop_index('identifier_not_deleted_unique', 'account')
    #op.create_index('ci_account_unique_account_name', 'account', [sa.text('lower(account_name)')], unique=True)
    #op.execute('drop trigger notification_delete on notification')
    #op.execute('drop trigger project_notification_delete on notification')
    pass
    # ### end Alembic commands ###