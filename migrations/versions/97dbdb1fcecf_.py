"""empty message

Revision ID: 97dbdb1fcecf
Revises: 9e379e8f3bd1
Create Date: 2019-10-25 06:12:21.131240

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '97dbdb1fcecf'
down_revision = '9e379e8f3bd1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('domain', sa.Column('code', sa.String(length=8)))
    op.execute("update domain set code = 'IN' where id = 1;")
    op.execute("update domain set code = 'HK' where id = 2;")
    op.execute("alter table domain alter column code set not null;")
    op.create_unique_constraint(None, 'domain', ['code'])
    op.drop_constraint('notification_ca_open_meeting_inquiry_id_fkey',
                       'notification', type_='foreignkey')
    op.drop_constraint('notification_ca_open_meeting_slot_id_fkey',
                       'notification', type_='foreignkey')
    op.create_foreign_key('notification_ca_open_meeting_inquiry_id_fkey',
                          'notification', 'ca_open_meeting_inquiry',
                          ['ca_open_meeting_inquiry_id'], ['id'],
                          ondelete='CASCADE')
    op.create_foreign_key('notification_ca_open_meeting_slot_id_fkey',
                          'notification', 'ca_open_meeting_slot',
                          ['ca_open_meeting_slot_id'], ['id'],
                          ondelete='CASCADE')
    op.add_column('admin_publish_notification',
                  sa.Column('domain_id', sa.BigInteger(), nullable=False,
                            server_default='1'))
    op.create_foreign_key('admin_publish_notification_domain_id_fkey',
                          'admin_publish_notification', 'domain',
                          ['domain_id'], ['id'], ondelete='RESTRICT')
    op.add_column('webinar',
                  sa.Column('domain_id', sa.BigInteger(), nullable=False,
                            server_default='1'))
    op.create_foreign_key('webinar_domain_id_fkey', 'webinar', 'domain',
                          ['domain_id'], ['id'], ondelete='RESTRICT')
    op.add_column('help_ticket',
                  sa.Column('domain_id', sa.BigInteger(), nullable=False,
                            server_default='1'))
    op.create_foreign_key('help_ticket_domain_id_fkey', 'help_ticket',
                          'domain', ['domain_id'], ['id'], ondelete='RESTRICT')
    op.add_column('inquiry',
                  sa.Column('domain_id', sa.BigInteger(), nullable=False,
                            server_default='1'))
    op.create_foreign_key('inquiry_domain_id_fkey', 'inquiry', 'domain',
                          ['domain_id'], ['id'], ondelete='RESTRICT')
    op.execute('CREATE or replace FUNCTION adjust_notification_count() '
               'RETURNS trigger AS $BODY$ BEGIN update "user" set '
               'current_notification_count = (select count(*) from '
               'notification where user_id = OLD.user_id and'
               ' read_time is null) where id = OLD.user_id; RETURN NULL; END; '
               '$BODY$ LANGUAGE plpgsql;')
    op.execute('CREATE TRIGGER notification_delete AFTER DELETE ON '
               'notification FOR EACH ROW EXECUTE PROCEDURE '
               'adjust_notification_count();')
    # creating default guest account for hong kong guest users
    op.execute("insert into account (account_name, account_type, "
               "subscription_end_date, subscription_start_date, domain_id,"
               " created_by, updated_by) values('default_guest_account_hk', "
               "'guest', '2019-12-31 12:30:00', '2018-04-10 13:06:49.632123', "
               "2, 0, 0);")
    op.execute("insert into account_profile  (account_id, account_type) "
               "values((select id from account where account_name = "
               "'default_guest_account_hk' limit 1), 'guest');")
    op.execute("insert into account_settings  (account_id) values((select id "
               "from account where account_name = 'default_guest_account_hk'"
               " limit 1));")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'domain', type_='unique')
    op.drop_column('domain', 'code')
    op.drop_constraint('notification_ca_open_meeting_slot_id_fkey',
                       'notification', type_='foreignkey')
    op.drop_constraint('notification_ca_open_meeting_inquiry_id_fkey',
                       'notification', type_='foreignkey')
    op.create_foreign_key('notification_ca_open_meeting_slot_id_fkey',
                          'notification', 'ca_open_meeting_slot',
                          ['ca_open_meeting_slot_id'], ['id'],
                          ondelete='SET NULL')
    op.create_foreign_key('notification_ca_open_meeting_inquiry_id_fkey',
                          'notification', 'ca_open_meeting_inquiry',
                          ['ca_open_meeting_inquiry_id'], ['id'],
                          ondelete='SET NULL')
    op.drop_constraint('webinar_domain_id_fkey', 'webinar', type_='foreignkey')
    op.drop_column('webinar', 'domain_id')
    op.drop_constraint('admin_publish_notification_domain_id_fkey',
                       'admin_publish_notification', type_='foreignkey')
    op.drop_column('admin_publish_notification', 'domain_id')
    op.drop_constraint('inquiry_domain_id_fkey', 'inquiry', type_='foreignkey')
    op.drop_column('inquiry', 'domain_id')
    op.drop_constraint('help_ticket_domain_id_fkey', 'help_ticket',
                       type_='foreignkey')
    op.drop_column('help_ticket', 'domain_id')
    op.execute('drop trigger notification_delete on notification')
    # ### end Alembic commands ###
