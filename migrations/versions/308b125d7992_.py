"""empty message

Revision ID: 308b125d7992
Revises: 379c8d702a70
Create Date: 2019-04-27 14:51:27.810855

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import app
from app.base import constants as APP

# revision identifiers, used by Alembic.
revision = '308b125d7992'
down_revision = '379c8d702a70'
branch_labels = None
depends_on = None
choices = app.base.model_fields.ChoiceString(APP.EMAIL_STATUS_CHOICES)

altered_tables = [
                  "corporate_access_event_host",
                  "corporate_access_event_invitee",
                  "corporate_access_event_rsvp",
                  "corporate_access_event_participant",
                  "corporate_access_event_collaborator",
                  ]


def upgrade():

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('corporate_access_event_host', sa.Column('email_status', choices, nullable=False, server_default=APP.EMAIL_SENT))
    op.add_column('corporate_access_event_invitee', sa.Column('email_status', choices, nullable=False, server_default=APP.EMAIL_SENT))
    op.add_column('corporate_access_event_participant', sa.Column('email_status', choices, nullable=False, server_default=APP.EMAIL_SENT))
    op.add_column('corporate_access_event_rsvp', sa.Column('email_status', choices, nullable=False, server_default=APP.EMAIL_SENT))
    op.add_column('corporate_access_event_collaborator',
                  sa.Column('email_status', choices, nullable=False,
                            server_default=APP.EMAIL_SENT))

    op.create_table('unsubscribe_reason',
                    sa.Column('id', sa.BigInteger(), nullable=False),
                    sa.Column('created_date', sa.DateTime(), nullable=True),
                    sa.Column('modified_date', sa.DateTime(), nullable=True),
                    sa.Column('title',
                              app.base.model_fields.LCString(length=512),
                              nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.add_column('unsubscription',
                  sa.Column('reason_id', sa.BigInteger(), nullable=False))
    op.create_foreign_key('unsubscription_reason_id_fkey', 'unsubscription',
                          'unsubscribe_reason', ['reason_id'], ['id'],
                          ondelete='CASCADE')
    op.drop_column('unsubscription', 'reason')

    for table in altered_tables:
        update_query = "update {} set email_status=case when is_mail_sent='t' then '{}' when is_mail_sent= 'f' then '{}' end;"
        op.execute(update_query.format(table, APP.EMAIL_SENT, APP.EMAIL_NOT_SENT))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('corporate_access_event_rsvp', 'email_status')
    op.drop_column('corporate_access_event_participant', 'email_status')
    op.drop_column('corporate_access_event_invitee', 'email_status')
    op.drop_column('corporate_access_event_host', 'email_status')
    op.drop_column('corporate_access_event_collaborator', 'email_status')

    op.add_column('unsubscription', sa.Column('reason', sa.VARCHAR(length=512),
                                              autoincrement=False,
                                              nullable=True))
    op.drop_constraint('unsubscription_reason_id_fkey', 'unsubscription',
                       type_='foreignkey')
    op.drop_column('unsubscription', 'reason_id')
    op.drop_table('unsubscribe_reason')


    # ### end Alembic commands ###
