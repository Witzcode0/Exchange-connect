"""empty message

Revision ID: 6181c88ad5b3
Revises: b10f33e43edf
Create Date: 2021-11-23 13:11:39.564748

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6181c88ad5b3'
down_revision = 'b10f33e43edf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('result_master')
    op.alter_column('result_tracker_group_companies', 'sequence_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('result_tracker_group_companies', 'concall_url')
    op.drop_column('result_tracker_group_companies', 'concall_date')
    op.drop_column('result_tracker_group_companies', 'result_date')
    op.drop_column('result_tracker_group_companies', 'result_url')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('result_tracker_group_companies', sa.Column('result_url', sa.VARCHAR(length=256), autoincrement=False, nullable=True))
    op.add_column('result_tracker_group_companies', sa.Column('result_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('result_tracker_group_companies', sa.Column('concall_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('result_tracker_group_companies', sa.Column('concall_url', sa.VARCHAR(length=256), autoincrement=False, nullable=True))
    op.alter_column('result_tracker_group_companies', 'sequence_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('dupe_bse',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('scrip_cd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dt_tm', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('file_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('head_line', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('news_sub', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('attachment_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('news_body', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('descriptor', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('critical_news', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type_of_announce', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type_of_meeting', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_of_meeting', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('descriptor_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('attachment_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('exchange_category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ec_category', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('acc_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['acc_id'], ['dupe_account.id'], name='fk_acc_id')
    )
    op.create_table('dupe_account',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('account_name', sa.VARCHAR(length=512), autoincrement=False, nullable=False),
    sa.Column('account_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('billing_street', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('billing_city', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('billing_state', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('billing_code', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('billing_country', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('identifier', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('isin_number', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('sedol', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('activation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_trial', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('subscription_end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('subscription_start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_download_report', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_parent', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('parent_account_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('export_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('keywords', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('is_sme', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('facebook_id', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('linkedin_id', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('twitter_id', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('bse_symbol', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('fsym_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('nse_symbol', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('perm_security_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('blocked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('domain_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='dupe_account_pkey')
    )
    op.create_table('result_master',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('account_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('result_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('result_url', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('concall_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('announcement_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], name='result_master_account_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['announcement_id'], ['bse_corp_feed.id'], name='result_master_bse_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='result_master_pkey')
    )
    op.create_table('dupe_result_tracker_group_companies',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('account_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('sequence_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('result_url', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('concall_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('concall_url', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('result_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
