# Sample config for uwsgi, replace values according to your local setup

[bsecs]
socket = 127.0.0.1:3031
module = run
callable = app
processes = 4
threads = 2
stats = 127.0.0.1:9191
virtualenv = /path/to/corporate-solution-server/venv
chdir = /path/to/corporate-solution-server/
master = true
lazy-apps = true
touch-chain-reload = /path/to/corporate-solution-server/app/__init__.py

buffer-size = 8192

threaded-logger = true

req-logger = file:/var/log/bsecs/request.log

# use daemonize2 if using from command line
#daemonize2 = /var/log/uwsgi/bsecs_uwsgi.log

# use logger if using from upstart
#logger = file:/var/log/uwsgi/bsecs_uwsgi.log
#logto = /var/log/uwsgi/bsecs_uwsgi.log

# change logging to syslog
logger = syslog:uwsgiapp_bsecs,bsecs
#req-logger = syslog:uwsgiapp_bsecs_req,bsecs_req
#logger-req = syslog:uwsgiapp_bsecs_req,bsecs_req

# use the following only in development
#py-autoreload = 1
memory-report = true  # helpful in debugging


[bsecssocket]
socket = 127.0.0.1:3032
module = run_socket
callable = socketapp
processes = 1
stats = 127.0.0.1:9192
virtualenv = /path/to/corporate-solution-server/venv
chdir = /path/to/corporate-solution-server/
master = true
lazy-apps = true
touch-chain-reload = /path/to/corporate-solution-server/socketapp/__init__.py

gevent = 5
gevent-monkey-patch = true
http-websockets = true

buffer-size = 8192

threaded-logger = true

req-logger = file:/var/log/bsecs/request.log

# use daemonize2 if using from command line
#daemonize2 = /var/log/uwsgi/bsecs_uwsgi.log

# use logger if using from upstart
#logger = file:/var/log/uwsgi/bsecs_uwsgi.log
#logto = /var/log/uwsgi/bsecs_uwsgi.log

# change logging to syslog
logger = syslog:uwsgiapp_bsecs,bsecs
#req-logger = syslog:uwsgiapp_bsecs_req,bsecs_req
#logger-req = syslog:uwsgiapp_bsecs_req,bsecs_req

# use the following only in development
#py-autoreload = 1
memory-report = true  # helpful in debugging
